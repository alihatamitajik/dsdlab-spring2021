$date
	Tue Apr  6 03:15:50 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module four_bit_comparator_tb $end
$var wire 1 ! L $end
$var wire 1 " G $end
$var wire 1 # E $end
$var reg 4 $ A [3:0] $end
$var reg 4 % B [3:0] $end
$var reg 4 & i [3:0] $end
$scope module comparator $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 4 ) L_in [3:0] $end
$var wire 1 ! L $end
$var wire 4 * G_in [3:0] $end
$var wire 1 " G $end
$var wire 4 + E_in [3:0] $end
$var wire 1 # E $end
$scope module c0 $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 . E_in $end
$var wire 1 / E_o $end
$var wire 1 0 G_in $end
$var wire 1 1 G_o $end
$var wire 1 2 L_in $end
$var wire 1 3 L_o $end
$upscope $end
$scope module c1 $end
$var wire 1 4 A $end
$var wire 1 5 B $end
$var wire 1 6 E_in $end
$var wire 1 7 E_o $end
$var wire 1 8 G_in $end
$var wire 1 9 G_o $end
$var wire 1 : L_in $end
$var wire 1 ; L_o $end
$upscope $end
$scope module c2 $end
$var wire 1 < A $end
$var wire 1 = B $end
$var wire 1 > E_in $end
$var wire 1 ? E_o $end
$var wire 1 @ G_in $end
$var wire 1 A G_o $end
$var wire 1 B L_in $end
$var wire 1 C L_o $end
$upscope $end
$scope module c3 $end
$var wire 1 D A $end
$var wire 1 E B $end
$var wire 1 F E_in $end
$var wire 1 # E_o $end
$var wire 1 G G_in $end
$var wire 1 " G_o $end
$var wire 1 H L_in $end
$var wire 1 ! L_o $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0H
1G
0F
0E
0D
0C
1B
1A
0@
0?
0>
0=
1<
1;
1:
09
08
07
06
05
04
13
02
01
00
0/
1.
1-
0,
b1 +
b1000 *
b110 )
b1 (
b100 '
b0 &
b1 %
b100 $
0#
1"
0!
$end
#10
1H
16
1C
b11 +
1/
0:
0G
b1100 )
03
b0 *
0A
15
1,
0<
1D
b11 %
b11 (
b1001 $
b1001 '
b1 &
#20
1#
1F
0H
1?
0C
1>
0!
b1111 +
17
0B
b0 )
0;
0"
05
1=
1E
1<
b1101 %
b1101 (
b1101 $
b1101 '
b10 &
#30
0#
1"
06
0>
0F
0/
18
07
1B
b1 +
0?
1G
11
b100 )
1;
b1010 *
1A
0-
15
0=
0E
0D
b10 %
b10 (
b101 $
b101 '
b11 &
#40
1>
17
0@
16
09
0"
b111 +
1/
08
0B
1H
0G
01
0;
b1000 )
1C
1!
b0 *
0A
1-
05
1=
1E
0<
b1101 %
b1101 (
b1 $
b1 '
b100 &
#50
1G
1A
06
0>
0F
0/
1:
07
1@
b1 +
0?
0H
13
b1100 *
19
b10 )
0C
0,
14
1<
b110 $
b110 '
b101 &
#60
0H
0C
1G
0B
1A
0;
1"
18
0:
1@
11
b0 )
03
b1110 *
19
0!
0-
1,
04
1D
b1100 %
b1100 (
b1101 $
b1101 '
b110 &
#70
0@
0G
09
b10 *
0A
1B
1H
1;
b1100 )
1C
15
0E
0<
b110 %
b110 (
b1001 $
b1001 '
b111 &
#80
1G
0H
b1010 *
1A
1!
b100 )
0C
0"
0=
1E
1<
0D
b1010 %
b1010 (
b101 $
b101 '
b1000 &
#90
1H
16
b1100 )
1C
0"
b11 +
1/
08
0G
01
b0 *
0A
1!
1-
1=
0E
b111 %
b111 (
b1001 &
#100
06
0>
0/
1:
b1 +
07
1B
13
b1110 )
1;
1E
0,
14
0<
b1111 %
b1111 (
b10 $
b10 '
b1010 &
#110
1>
0B
17
0;
16
b111 +
1/
0:
b1000 )
03
0-
b1110 %
b1110 (
b1011 &
#120
0>
1B
07
1;
06
b1 +
0/
1:
b1110 )
13
1"
0!
1-
05
0E
04
1D
b101 %
b101 (
b1000 $
b1000 '
b1100 &
#130
1!
1H
0"
b1110 )
1C
1E
1<
b1101 %
b1101 (
b1100 $
b1100 '
b1101 &
#140
0H
1F
0C
1?
1>
0B
17
0;
0!
16
b1111 +
1/
0:
1"
b0 )
03
0E
1,
b101 %
b101 (
b1101 $
b1101 '
b1110 &
#150
b1111 &
